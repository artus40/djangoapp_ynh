#!/bin/bash

# Source app helpers
source _common.sh
source /usr/share/yunohost/helpers

# Exit on command errors and treat unset variables as an error
ynh_abort_if_errors

# ========================================
# Retrieve arguments from the manifest
# ========================================

domain=$YNH_APP_ARG_DOMAIN 
path_url=$YNH_APP_ARG_PATH
password=$YNH_APP_ARG_PASSWORD
is_public=$YNH_APP_ARG_IS_PUBLIC 

# Get multi-instances specific variables
app=$YNH_APP_INSTANCE_NAME
app_nb=$YNH_APP_INSTANCE_NUMBER

# ========================================
# CHECKS
# ========================================

# Check password strength
#[[ ${#password} -gt 5 ]] || ynh_die \
#"The password is too weak, it must be longer than 5 characters"

# Check destination directory
final_path="/var/www/${app}"
test ! -e "$final_path" || ynh_die "This path already contains a folder"

# Normalize the url path syntax
path_url=$(ynh_normalize_url_path $path_url)

# Path availability
ynh_webpath_available $domain $path_url
# Register web path
ynh_webpath_register $app $domain $path_url

# ========================================  
# Store app settings
# ========================================  

user="djangoapp${app_nb}"
ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url
ynh_app_setting_set $app is_public $is_public
ynh_app_setting_set $app password $password
ynh_app_setting_set $app user $user
ynh_app_setting_set $app final_path $final_path

#TODO: add 'admin' ??
# ynh_app_setting_set "$app" admin $admin


# ========================================
# INSTALLATION
# ========================================

# Check dependencies
ynh_install_app_dependencies python3 virtualenv git

# ========================================
# USER ACCOUNT
# ========================================
sudo useradd -c "${app} user account" \
    -d "$final_path" -M -g www-data "$user" \
  || ynh_die "Unable to create user account"
sudo chpasswd <<< "${user}:${password}"

# Harden SSH connection for the user
echo "##-> ${app}
# Hardening user connection
Match User ${user}
  ChrootDirectory %h
  ForceCommand internal-sftp
  AllowTcpForwarding no
  PermitTunnel no
  X11Forwarding no
##<- ${app}" | sudo tee -a /etc/ssh/sshd_config >/dev/null

# ========================================
# APPLICATION SETUP
# ========================================

# Create virtual environnement
venv_setup $final_path

# Install required pip packages
venv_pip $final_path install django gunicorn
# ========================================
# DJANGO PROJECT
# ========================================

django_setup_project $final_path

# ========================================
# EMBEDDED APP SETUP
# ========================================

#TODO: setup from git project or sources folder.

# Copy source files
# sudo cp -r ../sources "$django_path"
# if [ -e "../sources/app_settings.py" ]
# then
#     sudo cp ../sources/settings.py "${app_path}/settings.py"
# fi
# if [ -e "../sources/app_urls.py" ]
# then
#     sudo rm "${app_path}/urls.py"
#     sudo cp ../sources/urls.py "${app_path}/urls.py"
# fi

# ========================================
# POST INSTALL
# ========================================


# Set permissions
sudo chown -hR "${user}:" "$final_path"

# Set SSOwat rules
[[ $is_public -eq 1 ]] \
  && ynh_app_setting_set "$app" protected_uris "/"

# Home directory of the user need to be owned by root to allow
# SFTP connections
sudo chown root: "$final_path"

# ========================================
# SERVICES
# ========================================

#TODO: Use socket file instead
# Find a free port
port=8080
netloc="127.0.0.1:${port}" #TODO: Multi-instance

# Set nginx configuration
ynh_replace_string "__NETLOC__" $netloc ../conf/nginx.conf
ynh_add_nginx_config

# Set gunicorn service configuration
ynh_replace_string "__NETLOC__" $netloc ../conf/systemd.conf
ynh_replace_string "__APPUSER__" $user ../conf/systemd.conf
ynh_add_systemd_config

